DIGEST 93b427ed78ab9b97f38f50cea5b1d8a6
FLTL.congruence
R1518:1523 LTL.safety <> <> lib
sec 1535:1544 <> congruence
var 1559:1563 congruence state
var 1565:1569 congruence label
var 1579:1588 congruence transition
var 1620:1629 congruence init_state
R1597:1600 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1592:1596 LTL.congruence <> label:1 var
R1601:1608 Coq.Relations.Relation_Definitions <> relation def
R1610:1614 LTL.congruence <> state:2 var
R1638:1641 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1633:1637 LTL.congruence <> state:2 var
syndef 1667:1672 <> Stream
R1678:1683 LTL.ltl <> stream coind
R1685:1689 LTL.congruence <> congruence.state var
syndef 1717:1729 <> State_formula
R1735:1747 LTL.ltl <> state_formula def
R1749:1753 LTL.congruence <> congruence.state var
syndef 1781:1794 <> Stream_formula
R1800:1813 LTL.ltl <> stream_formula def
R1815:1819 LTL.congruence <> congruence.state var
syndef 1847:1850 <> Safe
R1856:1859 LTL.ltl <> safe def
R1872:1881 LTL.congruence <> congruence.transition var
R1861:1870 LTL.congruence <> congruence.init_state var
prf 1987:1994 <> lift_imp
R2012:2024 LTL.ltl <> state_formula def
R2026:2030 LTL.congruence <> congruence.state var
binder 2006:2006 <> P:5
binder 2008:2008 <> Q:6
R2034:2034 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2063:2068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2046:2050 LTL.congruence <> congruence.state var
binder 2042:2042 <> s:7
R2056:2059 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2053:2053 LTL.congruence <> P:5 var
R2055:2055 LTL.congruence <> s:7 var
R2060:2060 LTL.congruence <> Q:6 var
R2062:2062 LTL.congruence <> s:7 var
R2082:2087 LTL.ltl <> stream coind
R2089:2093 LTL.congruence <> congruence.state var
binder 2076:2078 <> str:8
R2123:2126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2097:2116 LTL.ltl <> state2stream_formula def
R2120:2122 LTL.congruence <> str:8 var
R2118:2118 LTL.congruence <> P:5 var
R2127:2146 LTL.ltl <> state2stream_formula def
R2150:2152 LTL.congruence <> str:8 var
R2148:2148 LTL.congruence <> Q:6 var
R2163:2182 LTL.ltl <> state2stream_formula def
prf 2211:2229 <> lift_implies_stream
R2247:2260 LTL.ltl <> stream_formula def
R2262:2266 LTL.congruence <> congruence.state var
binder 2241:2241 <> P:9
binder 2243:2243 <> Q:10
R2270:2270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2312:2317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2284:2289 LTL.ltl <> stream coind
R2291:2295 LTL.congruence <> congruence.state var
binder 2278:2280 <> str:11
R2303:2306 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2298:2298 LTL.congruence <> P:9 var
R2300:2302 LTL.congruence <> str:11 var
R2307:2307 LTL.congruence <> Q:10 var
R2309:2311 LTL.congruence <> str:11 var
R2331:2336 LTL.ltl <> stream coind
R2338:2342 LTL.congruence <> congruence.state var
binder 2325:2327 <> str:12
R2345:2351 LTL.ltl <> implies def
R2357:2359 LTL.congruence <> str:12 var
R2355:2355 LTL.congruence <> Q:10 var
R2353:2353 LTL.congruence <> P:9 var
R2369:2375 LTL.ltl <> implies def
prf 2505:2522 <> lift_implies_state
R2540:2552 LTL.ltl <> state_formula def
R2554:2558 LTL.congruence <> congruence.state var
binder 2534:2534 <> P:13
binder 2536:2536 <> Q:14
R2562:2562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2591:2596 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2574:2578 LTL.congruence <> congruence.state var
binder 2570:2570 <> s:15
R2584:2587 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2581:2581 LTL.congruence <> P:13 var
R2583:2583 LTL.congruence <> s:15 var
R2588:2588 LTL.congruence <> Q:14 var
R2590:2590 LTL.congruence <> s:15 var
R2610:2615 LTL.ltl <> stream coind
R2617:2621 LTL.congruence <> congruence.state var
binder 2604:2606 <> str:16
R2625:2631 LTL.ltl <> implies def
R2683:2685 LTL.congruence <> str:16 var
R2659:2678 LTL.ltl <> state2stream_formula def
R2680:2680 LTL.congruence <> Q:14 var
R2634:2653 LTL.ltl <> state2stream_formula def
R2655:2655 LTL.congruence <> P:13 var
R2713:2731 LTL.congruence <> lift_implies_stream thm
R2713:2731 LTL.congruence <> lift_implies_stream thm
R2766:2773 LTL.congruence <> lift_imp thm
R2766:2773 LTL.congruence <> lift_imp thm
prf 2814:2831 <> implies_eventually
R2850:2863 LTL.ltl <> stream_formula def
R2865:2869 LTL.congruence <> congruence.state var
binder 2844:2844 <> P:17
binder 2846:2846 <> Q:18
R2879:2884 LTL.ltl <> stream coind
R2886:2890 LTL.congruence <> congruence.state var
binder 2873:2875 <> str:19
R2910:2913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2895:2901 LTL.ltl <> implies def
R2907:2909 LTL.congruence <> str:19 var
R2905:2905 LTL.congruence <> Q:18 var
R2903:2903 LTL.congruence <> P:17 var
R2930:2933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2914:2923 LTL.ltl <> eventually ind
R2927:2929 LTL.congruence <> str:19 var
R2925:2925 LTL.congruence <> P:17 var
R2934:2943 LTL.ltl <> eventually ind
R2947:2949 LTL.congruence <> str:19 var
R2945:2945 LTL.congruence <> Q:18 var
R3054:3060 LTL.ltl <> implies def
prf 3238:3258 <> congruence_eventually
R3277:3290 LTL.ltl <> stream_formula def
R3292:3296 LTL.congruence <> congruence.state var
binder 3271:3271 <> P:20
binder 3273:3273 <> Q:21
R3306:3311 LTL.ltl <> stream coind
R3313:3317 LTL.congruence <> congruence.state var
binder 3300:3302 <> str:22
R3337:3340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3322:3328 LTL.ltl <> implies def
R3334:3336 LTL.congruence <> str:22 var
R3332:3332 LTL.congruence <> Q:21 var
R3330:3330 LTL.congruence <> P:20 var
R3341:3347 LTL.ltl <> implies def
R3379:3381 LTL.congruence <> str:22 var
R3365:3374 LTL.ltl <> eventually ind
R3376:3376 LTL.congruence <> Q:21 var
R3350:3359 LTL.ltl <> eventually ind
R3361:3361 LTL.congruence <> P:20 var
R3392:3398 LTL.ltl <> implies def
R3474:3479 LTL.ltl <> stream coind
R3481:3485 LTL.congruence <> congruence.state var
binder 3467:3470 <> str0:23
R3496:3499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3492:3495 LTL.congruence <> str0:23 var
R3502:3505 LTL.congruence <> str0:23 var
R3434:3450 LTL.safety <> always_assumption thm
R3474:3479 LTL.ltl <> stream coind
R3481:3485 LTL.congruence <> congruence.state var
binder 3467:3470 <> str0:24
R3496:3499 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3492:3495 LTL.congruence <> str0:24 var
R3502:3505 LTL.congruence <> str0:24 var
R3434:3450 LTL.safety <> always_assumption thm
R3560:3577 LTL.congruence <> implies_eventually thm
R3560:3577 LTL.congruence <> implies_eventually thm
prf 3612:3625 <> implies_always
R3644:3657 LTL.ltl <> stream_formula def
R3659:3663 LTL.congruence <> congruence.state var
binder 3638:3638 <> P:25
binder 3640:3640 <> Q:26
R3673:3678 LTL.ltl <> stream coind
R3680:3684 LTL.congruence <> congruence.state var
binder 3667:3669 <> str:27
R3704:3707 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3689:3695 LTL.ltl <> implies def
R3701:3703 LTL.congruence <> str:27 var
R3699:3699 LTL.congruence <> Q:26 var
R3697:3697 LTL.congruence <> P:25 var
R3720:3723 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3708:3713 LTL.ltl <> always coind
R3717:3719 LTL.congruence <> str:27 var
R3715:3715 LTL.congruence <> P:25 var
R3724:3729 LTL.ltl <> always coind
R3733:3735 LTL.congruence <> str:27 var
R3731:3731 LTL.congruence <> Q:26 var
prf 3966:3982 <> congruence_always
R4001:4014 LTL.ltl <> stream_formula def
R4016:4020 LTL.congruence <> congruence.state var
binder 3995:3995 <> P:28
binder 3997:3997 <> Q:29
R4030:4035 LTL.ltl <> stream coind
R4037:4041 LTL.congruence <> congruence.state var
binder 4024:4026 <> str:30
R4061:4064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4046:4052 LTL.ltl <> implies def
R4058:4060 LTL.congruence <> str:30 var
R4056:4056 LTL.congruence <> Q:29 var
R4054:4054 LTL.congruence <> P:28 var
R4065:4071 LTL.ltl <> implies def
R4095:4097 LTL.congruence <> str:30 var
R4085:4090 LTL.ltl <> always coind
R4092:4092 LTL.congruence <> Q:29 var
R4074:4079 LTL.ltl <> always coind
R4081:4081 LTL.congruence <> P:28 var
R4137:4143 LTL.ltl <> implies def
R4219:4224 LTL.ltl <> stream coind
R4226:4230 LTL.congruence <> congruence.state var
binder 4212:4215 <> str0:31
R4241:4244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4237:4240 LTL.congruence <> str0:31 var
R4247:4250 LTL.congruence <> str0:31 var
R4179:4195 LTL.safety <> always_assumption thm
R4219:4224 LTL.ltl <> stream coind
R4226:4230 LTL.congruence <> congruence.state var
binder 4212:4215 <> str0:32
R4241:4244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4237:4240 LTL.congruence <> str0:32 var
R4247:4250 LTL.congruence <> str0:32 var
R4179:4195 LTL.safety <> always_assumption thm
R4305:4318 LTL.congruence <> implies_always thm
R4305:4318 LTL.congruence <> implies_always thm
prf 4354:4377 <> implies_infinitely_often
R4396:4409 LTL.ltl <> stream_formula def
R4411:4415 LTL.congruence <> congruence.state var
binder 4390:4390 <> P:33
binder 4392:4392 <> Q:34
R4425:4430 LTL.ltl <> stream coind
R4432:4436 LTL.congruence <> congruence.state var
binder 4419:4421 <> str:35
R4456:4459 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4441:4447 LTL.ltl <> implies def
R4453:4455 LTL.congruence <> str:35 var
R4451:4451 LTL.congruence <> Q:34 var
R4449:4449 LTL.congruence <> P:33 var
R4482:4485 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4460:4475 LTL.ltl <> infinitely_often def
R4479:4481 LTL.congruence <> str:35 var
R4477:4477 LTL.congruence <> P:33 var
R4486:4501 LTL.ltl <> infinitely_often def
R4505:4507 LTL.congruence <> str:35 var
R4503:4503 LTL.congruence <> Q:34 var
R4518:4533 LTL.ltl <> infinitely_often def
R4611:4620 LTL.ltl <> eventually ind
R4585:4598 LTL.congruence <> implies_always thm
R4611:4620 LTL.ltl <> eventually ind
R4585:4598 LTL.congruence <> implies_always thm
R4649:4655 LTL.ltl <> implies def
R4673:4679 LTL.ltl <> implies def
R4740:4745 LTL.ltl <> stream coind
R4747:4751 LTL.congruence <> congruence.state var
binder 4734:4736 <> str:36
R4761:4764 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4758:4760 LTL.congruence <> str:36 var
R4767:4769 LTL.congruence <> str:36 var
R4701:4717 LTL.safety <> always_assumption thm
R4740:4745 LTL.ltl <> stream coind
R4747:4751 LTL.congruence <> congruence.state var
binder 4734:4736 <> str:37
R4761:4764 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4758:4760 LTL.congruence <> str:37 var
R4767:4769 LTL.congruence <> str:37 var
R4701:4717 LTL.safety <> always_assumption thm
R4787:4804 LTL.congruence <> implies_eventually thm
R4787:4804 LTL.congruence <> implies_eventually thm
prf 4861:4887 <> congruence_infinitely_often
R4906:4919 LTL.ltl <> stream_formula def
R4921:4925 LTL.congruence <> congruence.state var
binder 4900:4900 <> P:38
binder 4902:4902 <> Q:39
R4935:4940 LTL.ltl <> stream coind
R4942:4946 LTL.congruence <> congruence.state var
binder 4929:4931 <> str:40
R4966:4969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4951:4957 LTL.ltl <> implies def
R4963:4965 LTL.congruence <> str:40 var
R4961:4961 LTL.congruence <> Q:39 var
R4959:4959 LTL.congruence <> P:38 var
R4970:4976 LTL.ltl <> implies def
R5020:5022 LTL.congruence <> str:40 var
R5000:5015 LTL.ltl <> infinitely_often def
R5017:5017 LTL.congruence <> Q:39 var
R4979:4994 LTL.ltl <> infinitely_often def
R4996:4996 LTL.congruence <> P:38 var
R5033:5039 LTL.ltl <> implies def
R5115:5120 LTL.ltl <> stream coind
R5122:5126 LTL.congruence <> congruence.state var
binder 5108:5111 <> str0:41
R5137:5140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5133:5136 LTL.congruence <> str0:41 var
R5143:5146 LTL.congruence <> str0:41 var
R5075:5091 LTL.safety <> always_assumption thm
R5115:5120 LTL.ltl <> stream coind
R5122:5126 LTL.congruence <> congruence.state var
binder 5108:5111 <> str0:42
R5137:5140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5133:5136 LTL.congruence <> str0:42 var
R5143:5146 LTL.congruence <> str0:42 var
R5075:5091 LTL.safety <> always_assumption thm
R5202:5225 LTL.congruence <> implies_infinitely_often thm
R5202:5225 LTL.congruence <> implies_infinitely_often thm
prf 5260:5276 <> invariant_implies
R5296:5309 LTL.ltl <> stream_formula def
R5311:5315 LTL.congruence <> congruence.state var
binder 5288:5288 <> P:43
binder 5290:5290 <> Q:44
binder 5292:5292 <> I:45
R5319:5319 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5377:5382 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5333:5338 LTL.ltl <> stream coind
R5340:5344 LTL.congruence <> congruence.state var
binder 5327:5329 <> str:46
R5359:5362 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5347:5352 LTL.ltl <> always coind
R5356:5358 LTL.congruence <> str:46 var
R5354:5354 LTL.congruence <> I:45 var
R5368:5371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5363:5363 LTL.congruence <> P:43 var
R5365:5367 LTL.congruence <> str:46 var
R5372:5372 LTL.congruence <> Q:44 var
R5374:5376 LTL.congruence <> str:46 var
R5396:5401 LTL.ltl <> stream coind
R5403:5407 LTL.congruence <> congruence.state var
binder 5390:5392 <> str:47
R5422:5425 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5410:5415 LTL.ltl <> always coind
R5419:5421 LTL.congruence <> str:47 var
R5417:5417 LTL.congruence <> I:45 var
R5426:5432 LTL.ltl <> implies def
R5438:5440 LTL.congruence <> str:47 var
R5436:5436 LTL.congruence <> Q:44 var
R5434:5434 LTL.congruence <> P:43 var
R5474:5480 LTL.ltl <> implies def
R5497:5513 LTL.safety <> always_assumption thm
R5497:5513 LTL.safety <> always_assumption thm
prf 5556:5576 <> inv_implies_inf_often
R5596:5609 LTL.ltl <> stream_formula def
R5611:5615 LTL.congruence <> congruence.state var
binder 5588:5588 <> P:48
binder 5590:5590 <> Q:49
binder 5592:5592 <> I:50
R5619:5619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5677:5682 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5633:5638 LTL.ltl <> stream coind
R5640:5644 LTL.congruence <> congruence.state var
binder 5627:5629 <> str:51
R5659:5662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5647:5652 LTL.ltl <> always coind
R5656:5658 LTL.congruence <> str:51 var
R5654:5654 LTL.congruence <> I:50 var
R5668:5671 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5663:5663 LTL.congruence <> P:48 var
R5665:5667 LTL.congruence <> str:51 var
R5672:5672 LTL.congruence <> Q:49 var
R5674:5676 LTL.congruence <> str:51 var
R5696:5701 LTL.ltl <> stream coind
R5703:5707 LTL.congruence <> congruence.state var
binder 5690:5692 <> str:52
R5723:5726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5711:5716 LTL.ltl <> always coind
R5720:5722 LTL.congruence <> str:52 var
R5718:5718 LTL.congruence <> I:50 var
R5749:5752 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5727:5742 LTL.ltl <> infinitely_often def
R5746:5748 LTL.congruence <> str:52 var
R5744:5744 LTL.congruence <> P:48 var
R5753:5768 LTL.ltl <> infinitely_often def
R5772:5774 LTL.congruence <> str:52 var
R5770:5770 LTL.congruence <> Q:49 var
R5815:5838 LTL.congruence <> implies_infinitely_often thm
R5815:5838 LTL.congruence <> implies_infinitely_often thm
R5877:5893 LTL.congruence <> invariant_implies thm
R5877:5893 LTL.congruence <> invariant_implies thm
prf 5934:5946 <> implies_until
R5971:5984 LTL.ltl <> stream_formula def
R5986:5990 LTL.congruence <> congruence.state var
binder 5959:5959 <> P:53
binder 5961:5962 <> P':54
binder 5964:5964 <> Q:55
binder 5966:5967 <> Q':56
R6000:6005 LTL.ltl <> stream coind
R6007:6011 LTL.congruence <> congruence.state var
binder 5994:5996 <> str:57
R6032:6035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6016:6022 LTL.ltl <> implies def
R6029:6031 LTL.congruence <> str:57 var
R6026:6027 LTL.congruence <> P':54 var
R6024:6024 LTL.congruence <> P:53 var
R6052:6055 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6036:6042 LTL.ltl <> implies def
R6049:6051 LTL.congruence <> str:57 var
R6046:6047 LTL.congruence <> Q':56 var
R6044:6044 LTL.congruence <> Q:55 var
R6069:6072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6056:6060 LTL.ltl <> until ind
R6066:6068 LTL.congruence <> str:57 var
R6064:6064 LTL.congruence <> Q:55 var
R6062:6062 LTL.congruence <> P:53 var
R6073:6077 LTL.ltl <> until ind
R6085:6087 LTL.congruence <> str:57 var
R6082:6083 LTL.congruence <> Q':56 var
R6079:6080 LTL.congruence <> P':54 var
prf 6409:6427 <> implies_until_state
R6451:6463 LTL.ltl <> state_formula def
R6465:6469 LTL.congruence <> congruence.state var
binder 6439:6439 <> P:58
binder 6441:6442 <> P':59
binder 6444:6444 <> Q:60
binder 6446:6447 <> Q':61
R6473:6473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6503:6508 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6485:6489 LTL.congruence <> congruence.state var
binder 6481:6481 <> s:62
R6495:6498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6492:6492 LTL.congruence <> P:58 var
R6494:6494 LTL.congruence <> s:62 var
R6499:6500 LTL.congruence <> P':59 var
R6502:6502 LTL.congruence <> s:62 var
R6509:6509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6539:6544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6521:6525 LTL.congruence <> congruence.state var
binder 6517:6517 <> s:63
R6531:6534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6528:6528 LTL.congruence <> Q:60 var
R6530:6530 LTL.congruence <> s:63 var
R6535:6536 LTL.congruence <> Q':61 var
R6538:6538 LTL.congruence <> s:63 var
R6558:6563 LTL.ltl <> stream coind
R6565:6569 LTL.congruence <> congruence.state var
binder 6552:6554 <> str:64
R6632:6636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6573:6577 LTL.ltl <> until ind
R6629:6631 LTL.congruence <> str:64 var
R6605:6624 LTL.ltl <> state2stream_formula def
R6626:6626 LTL.congruence <> Q:60 var
R6580:6599 LTL.ltl <> state2stream_formula def
R6601:6601 LTL.congruence <> P:58 var
R6637:6641 LTL.ltl <> until ind
R6695:6697 LTL.congruence <> str:64 var
R6670:6689 LTL.ltl <> state2stream_formula def
R6691:6692 LTL.congruence <> Q':61 var
R6644:6663 LTL.ltl <> state2stream_formula def
R6665:6666 LTL.congruence <> P':59 var
R6773:6792 LTL.ltl <> state2stream_formula def
R6803:6822 LTL.ltl <> state2stream_formula def
R6746:6758 LTL.congruence <> implies_until thm
R6773:6792 LTL.ltl <> state2stream_formula def
R6803:6822 LTL.ltl <> state2stream_formula def
R6746:6758 LTL.congruence <> implies_until thm
R6851:6868 LTL.congruence <> lift_implies_state thm
R6851:6868 LTL.congruence <> lift_implies_state thm
R6903:6920 LTL.congruence <> lift_implies_state thm
R6903:6920 LTL.congruence <> lift_implies_state thm
prf 6961:6972 <> implies_safe
R6990:7003 LTL.ltl <> stream_formula def
R7005:7009 LTL.congruence <> congruence.state var
binder 6984:6984 <> P:65
binder 6986:6986 <> Q:66
R7013:7013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7056:7061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7027:7032 LTL.ltl <> stream coind
R7034:7038 LTL.congruence <> congruence.state var
binder 7021:7023 <> str:67
R7041:7047 LTL.ltl <> implies def
R7053:7055 LTL.congruence <> str:67 var
R7051:7051 LTL.congruence <> Q:66 var
R7049:7049 LTL.congruence <> P:65 var
R7090:7093 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7062:7065 LTL.ltl <> safe def
R7089:7089 LTL.congruence <> P:65 var
R7078:7087 LTL.congruence <> congruence.transition var
R7067:7076 LTL.congruence <> congruence.init_state var
R7094:7097 LTL.ltl <> safe def
R7121:7121 LTL.congruence <> Q:66 var
R7110:7119 LTL.congruence <> congruence.transition var
R7099:7108 LTL.congruence <> congruence.init_state var
R7132:7135 LTL.ltl <> safe def
R7188:7201 LTL.congruence <> implies_always thm
R7188:7201 LTL.congruence <> implies_always thm
R7234:7243 LTL.congruence congruence <> sec
